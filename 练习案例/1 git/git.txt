现在我们编写一个readme.txt文件
第一步，用命令git add告诉Git，把文件添加到仓库：$ git add readme.txt
第二步，用命令git commit告诉Git，把文件提交到仓库：$ git commit -m "wrote a readme file"
运行git status命令看看结果（git status命令可以让我们时刻掌握仓库当前的状态，上面的命令告诉我们，readme.txt被修改过了，但还没有准备提交的修改）
需要用git diff这个命令看看具体修改了什么内容$ git diff readme.txt

添加远程仓库
由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以，需要一点设置：
第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：$ ssh-keygen -t rsa -C "youremail@example.com"
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容：点“Add Key”，你就应该看到已经添加的Key：
GitHub需要识别出你推送的提交确实是你推送的，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了

1，，登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库
2，在GitHub上的这个learngit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库
在本地的learngit仓库下运行命令$ git remote add origin git@github.com:gena2007/myspace.git
3，把本地库的所有内容推送到远程库上 git push -u origin master

从远程库克隆
git clone git@github.com:gena2007/myspace.git

Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

首先，我们创建dev分支，然后切换到dev分支：git checkout -b dev 相当于以下两条命令git branch dev git checkout dev
然后，用git branch命令查看当前分支git branch
然后，我们就可以在dev分支上正常提交，比如对readme.txt做个修改，加上一行提交git add readme.txt, git commit -m "branch test"
现在，dev分支的工作完成，我们就可以切换回master分支git checkout master
现在，我们把dev分支的工作成果合并到master分支上git merge dev
合并完成后，就可以放心地删除dev分支了git branch -d dev
删除后，查看branch，就只剩下master分支了git branch
